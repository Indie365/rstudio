pipeline {
  agent none

  options {
    disableConcurrentBuilds()
    buildDiscarder(
      logRotator(
        artifactDaysToKeepStr: '',
        artifactNumToKeepStr: '',
        daysToKeepStr: '',
        numToKeepStr: '100'))
    rateLimitBuilds(throttle: [count: 1, durationName: 'hour', userBoost: true])
  }

  triggers {
    // The first Sunday of every month at 12am
    cron '0 0 1-7 * 0'
  }
  
  parameters {
    string defaultValue: '#ide-builds', description: 'Slack channel to publish build message.', name: 'SLACK_CHANNEL', trim: true
    booleanParam defaultValue: true, description: 'Publish the build to S3 and sentry.', name: 'PUBLISH'
    booleanParam defaultValue: true, description: 'Force build binaries even if there are no changes.', name: 'FORCE_BUILD_BINARIES'
    booleanParam defaultValue: false, description: 'Force rebuild docker images', name: 'FORCE_BUILD_DOCKER'
    booleanParam defaultValue: false, description: 'Rebuild binaries even if they already exist on dailies page' name: 'FORCE_REBUILD'
    string name: 'OS_FILTER', defaultValue: 'all', description: 'Pattern to limit builds by matching OS'
    string name: 'ARCH_FILTER', defaultValue: 'all', description: 'Pattern to limit builds by matching ARCH'
    booleanParam name: 'DAILY', defaultValue: true, description: 'Builds daily/nightly builds if true; builds hourly builds if false.'
  }
  
  stages {
    // Normal build when triggered by a commit
    stage('Trigger Dispatcher') {
      when { triggeredBy 'SCMTrigger' }
      steps {
        build wait: false,
              job: "IDE/${env.JOB_URL.contains('Pro') ? 'Pro' : 'OS'}-Builds/build-pipeline/${env.BRANCH_NAME.replace('/', '%2F')}",
              parameters: [
                string(name: "SLACK_CHANNEL", value: "${SLACK_CHANNEL}"),
                booleanParam(name: "FORCE_BUILD", value: params.FORCE_BUILD_BINARIES),
                booleanParam(name: "FORCE_BUILD_DOCKER", value: params.FORCE_BUILD_DOCKER),
                booleanParam(name: "FORCE_REBUILD", value: params.FORCE_REBUILD),
                booleanParam(name: "DAILY", value: params.DAILY),
                booleanParam(name: "PUBLISH", value: params.PUBLISH),
                string(name: "OS_FILTER", value: params.OS_FILTER),
                string(name: "ARCH_FILTER", value: params.ARCH_FILTER)
              ]
      }
    }
    // Rebuild, but don't upload when triggered by a timer
    // This build is a monthly check to verify we can still build older released versions
    stage('Trigger Monthly Rebuild') {
      when { triggeredBy 'TimerTrigger' }
      steps {
        build wait: false,
              job: "IDE/${env.JOB_URL.contains('Pro') ? 'Pro' : 'OS'}-Builds/build-pipeline/${env.BRANCH_NAME.replace('/', '%2F')}",
              parameters: [
                string(name: "SLACK_CHANNEL", value: "${SLACK_CHANNEL}"),
                booleanParam(name: "FORCE_BUILD", true),
                booleanParam(name: "FORCE_BUILD_DOCKER", false),
                booleanParam(name: "FORCE_REBUILD", true),
                booleanParam(name: "DAILY", true),
                booleanParam(name: "PUBLISH", false),
                string(name: "OS_FILTER", value: 'all'),
                string(name: "ARCH_FILTER", value: 'all')
              ]
      }
    }
  }
}
