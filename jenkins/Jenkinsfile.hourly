pipeline {
  agent none

  options {
    disableConcurrentBuilds()
    buildDiscarder(
      logRotator(
        artifactDaysToKeepStr: '',
        artifactNumToKeepStr: '',
        daysToKeepStr: '',
        numToKeepStr: '100'))
    rateLimitBuilds(throttle: [count: 1, durationName: 'hour', userBoost: true])
  }
  
  parameters {
    string defaultValue: '0', description: 'RStudio Patch Version', name: 'RSTUDIO_VERSION_PATCH', trim: true
    string defaultValue: '#ide-builds', description: 'Slack channel to publish build message.', name: 'SLACK_CHANNEL', trim: true
    booleanParam defaultValue: true, description: 'Publish the build to S3.', name: 'PUBLISH'
    booleanParam defaultValue: false, description: 'Force build even if there are no changes.', name: 'FORCE_BUILD'
    string name: 'OS_FILTER', defaultValue: 'all', description: 'Pattern to limit builds by matching OS'
    string name: 'ARCH_FILTER', defaultValue: 'all', description: 'Pattern to limit builds by matching ARCH'
  }

  stages {
    stage('Trigger Dispatcher') {
      steps {
        build wait: false,
              job: "IDE/OS-Builds/nightly-pipeline/${env.BRANCH_NAME.replace('/', '%2F')}",
              parameters: [
                string(name: "RSTUDIO_VERSION_PATCH", value: "${RSTUDIO_VERSION_PATCH}"),
                string(name: "SLACK_CHANNEL", value: "${SLACK_CHANNEL}"),
                booleanParam(name: "DAILY", value: false),
                booleanParam(name: "PUBLISH", value: params.PUBLISH),
                string(name: "OS_FILTER", value: params.OS_FILTER),
                string(name: "ARCH_FILTER", value: params.ARCH_FILTER)
              ]
      }
    }
  }
}
